name: Release - Deploy Live
on:
  workflow_call:
    inputs:
      k8s-cluster-name:
        description: k8 cluster name in prod
        type: string
        required: true
      k8s-cluster-project:
        description: k8s cluster project in prod
        type: string
        required: true
      cloud-function-deployment-bucket-dev:
        description: Bucket used to deploy cloud functions archives in dev
        type: string
        required: false
        default: ""
      cloud-function-deployment-bucket-live:
        description: Bucket used to deploy cloud functions archives in live
        type: string
        required: false
        default: ""
      azure-tf:
        description: setup Azure credentials for tf workflow?
        type: string
        required: false
        default: 'false'
    secrets:
      ci-cd-key-dev:
        description: CICD Service Account credentials in dev environment
        required: true
      ci-cd-key-live:
        description: CICD Service Account credentials in live environment
        required: true
      k8s-key:
        description: CICD Service Account credentials to access k8s prod cluster
        required: true
      azure-credentials:
        description: azure credentials for terraform
        required: false

jobs:
  init:
    runs-on: ubuntu-20.04
    name: Initialize
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - name: get latest release
        id: release
        uses: Ki-Insurance/github-data-workflows/.github/actions/global/get-last-release@v1
      - name: Get Files Changes Info
        id: info
        uses: Ki-Insurance/github-data-workflows/.github/actions/global/files-changes-info@v1
        with:
          base-sha: ${{ steps.release.outputs.commit-sha }}
    outputs:
      terragrunt-base-changes: ${{ steps.info.outputs.terragrunt-base-changes }}
      terragunt-live-config-changes: ${{ steps.info.outputs.terragunt-live-config-changes }}
      kubernetes-changes-overlay-live: ${{ steps.info.outputs.kubernetes-changes-overlay-live }}
      kubernetes-changes-base: ${{ steps.info.outputs.kubernetes-changes-base }}
      cloud-functions-changes: ${{ steps.info.outputs.cloud-functions-changes }}
      cloud-functions-matrix: ${{ steps.info.outputs.cloud-functions-list-changes }}

  promote-cloud-functions:
    name: Promote Cloud Functions
    runs-on: ubuntu-20.04
    needs:
      - init
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.init.outputs.cloud-functions-matrix) }}
    if: |
      always() 
      && needs.init.outputs.cloud-functions-changes == 'true' 
      && needs.init.outputs.cloud-functions-matrix != '{"function":[]}'
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
      - name: promote
        uses: Ki-Insurance/github-data-workflows/.github/actions/cloud_functions/promote@v1
        with:
          gcp-service-account-key-dev: ${{ secrets.ci-cd-key-dev }}
          gcp-service-account-key-live: ${{ secrets.ci-cd-key-live }}
          deployment-bucket-dev: ${{ inputs.cloud-function-deployment-bucket-dev }}
          deployment-bucket-live: ${{ inputs.cloud-function-deployment-bucket-live }}
          working-directory: cloud_functions/${{ matrix.function }}
          cloud-function-name: ${{ matrix.function }}

  terragrunt-apply-live:
    runs-on: ubuntu-20.04
    name: Terragrunt Apply LIVE
    needs:
      - init
      - promote-cloud-functions
    if: |
      always() 
      && ( needs.init.outputs.terragunt-live-config-changes == 'true' 
        || needs.init.outputs.terragrunt-base-changes == 'true' ) 
      && needs.promote-cloud-functions.result != 'failure'
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
      - name: azure login
        if: inputs.azure-tf == 'true'
        run: |
          echo "ARM_CLIENT_ID=$(echo '${{ secrets.azure-credentials }}' | jq -r '.clientId')" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(echo '${{ secrets.azure-credentials }}' | jq -r '.clientSecret')" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(echo '${{ secrets.azure-credentials }}' | jq -r '.subscriptionId')" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(echo '${{ secrets.azure-credentials }}' | jq -r '.tenantId')" >> $GITHUB_ENV
      - name: terragrunt apply
        uses: Ki-Insurance/github-data-workflows/.github/actions/terragrunt/apply@v1
        with:
          gcp-service-account-key: ${{ secrets.ci-cd-key-live }}
          terraform-version: 1.1.6
          terragrunt-version: 0.36.2
          environment: live

  flux-check-live:
    runs-on: ubuntu-20.04
    name: Flux Check LIVE
    needs:
      - init
      - terragrunt-apply-live
    if: |
      always() 
      && ( needs.init.outputs.kubernetes-changes-overlay-live == 'true' 
        || needs.init.outputs.kubernetes-changes-base == 'true' ) 
      && needs.terragrunt-apply-live.result != 'failure'
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
      - name: check flux deployment status
        uses: Ki-Insurance/github-data-workflows/.github/actions/kubernetes/check-flux-deployment@v1
        with:
          environment: live
          gcp-service-account-key: ${{ secrets.k8s-key }}
          cluster-name: ${{ inputs.k8s-cluster-name }}
          cluster-project: ${{ inputs.k8s-cluster-project }}
