name: Scan container

on:
  workflow_call:
    inputs:
      container-names-matrix:
        # NB Dockerfile must be in "<container-name>/Dockerfile" format
        default: "['default-container-name']"
        required: true
        type: string

      poetry-google-username:
        default: 'None'
        reqiured: true
        type: string  

      artifact-registries:
        default: 'None'
        required: true
        type: string

      pypi-url:
        default: 'None'
        required: true
        type: string

      pypi-workload-identity-provider:
        default: 'None'
        required: true
        type: string

      pypi-workload-identity-service-account:
        default: 'None'
        required: true
        type: string

      docker-workload-identity-provider:
        default: 'None'
        required: true
        type: string

      docker-workload-identity-provider-service-account:
        default: 'None'
        required: true
        type: string

jobs:
  container-scans:
    name: Container Scans
    runs-on: ubuntu-latest
    permissions:
      id-token: "write"
      contents: "read"
    strategy:
      matrix: 
        container-name: ${{ fromJSON(github.event.inputs.container-names-matrix) }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      - id: auth
        name: Authenticate with ki-pypi 
        uses: google-github-actions/auth@v0.4.1
        with:
          workload_identity_provider: ${{ inputs.pypi-workload-identity-provider }}
          service_account: ${{ inputs.pypi-workload-identity-service-account }}
          token_format: "access_token"

      - name: Install Ki's container-scan library
        run: |
          pip install keyrings.google-artifactregistry-auth
          pip install --extra-index-url ${{ inputs.pypi-url }} container-scan==2.1.0
      - name: Install the gcloud tools for extracting scannable data from a local docker image
        uses: "google-github-actions/setup-gcloud@v0"
        with:
          install_components: "local-extract"

      - name: Build ${{ matrix.container-name }} image
        env:
          POETRY_HTTP_BASIC_GOOGLE_USERNAME: ${{ inputs.poetry-google-username }}
          POETRY_HTTP_BASIC_GOOGLE_PASSWORD: ${{ steps.auth.outputs.access_token }}
          DOCKER_BUILDKIT: 1
        run: |
          docker build --secret=id=POETRY_HTTP_BASIC_GOOGLE_PASSWORD -f ${{ matrix.container-name }}/Dockerfile . -t ${{ matrix.container-name }}
          docker tag ${{ matrix.container-name }} ${{ matrix.container-name }}:${{ github.run_number }}
      - name: Authenticate to registries project
        uses: google-github-actions/auth@v0
        id: auth-docker
        with:
          workload_identity_provider: ${{ inputs.docker-workload-identity-provider }}
          service_account: ${{ inputs.docker-workload-identity-provider-service-account }}
          token_format: 'access_token'

      - name: Scan ${{ matrix.container-name }} image
        id: run-container-scan
        run: |
          container-scan ${{ inputs.artifact-registries }} ${{ matrix.container-name}}:${{ github.run_number }}
