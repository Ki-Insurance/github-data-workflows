name: Sync Docker Images
description: Sync Docker images with the Artifact Registry
inputs:
  registry:
    description: Registry DNS name
    required: true
  docker-workload-identity-provider:
    description: workloard identity provider
    required: true
  docker-workload-identity-service-account:
    description: workload identity service account
    required: true
  maven-workload-identity-provider:
    description: Identity provider for maven artifact registry
    required: true
  maven-workload-identity-service-account:
    description: Service Account to maven python artifact registry
    required: true
  kustomization-path:
    description: Path of the kustomization file containing the images
    required: true
    default: infrastructure/kubernetes/base/kustomization.yaml
runs:
  using: "composite"
  steps:
    - name: Install Docker
      uses: docker/setup-buildx-action@v1
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
    - name: Authenticate to Docker Registry
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: ${{ inputs.docker-workload-identity-provider }}
        service_account: ${{ inputs.docker-workload-identity-service-account }}
    - name: Docker login
      run:  gcloud auth configure-docker -q europe-docker.pkg.dev
      shell: bash
    - name: Get Images too push to the registry
      id: images
      run: |
        TO_PUSH='[ '
        IMAGES=$(yq -e '.images[] | .newName + ":" + .newTag' ${{ inputs.kustomization-path }} || true )
        if [[ -z "${IMAGES}" ]]; then
          echo "No images found"
        else
        
          while IFS= read -r image; do
            
            IMAGE_NAME=$(echo ${image} | cut -f4 -d '/' | cut -f1 -d ':')
            if [[ "${IMAGE_NAME}" == app_* ]]; then
  
              IMAGE_INFO=$(gcloud artifacts docker images describe "${image}" || true)
              if [[ -z "${IMAGE_INFO}" ]]; then
                echo "${image} is not in the registry"
                SHA=$(echo ${image} | cut -f4 -d '/' | cut -f2 -d ':' | cut -f2 -d '_')
                IMAGE_PATH=${IMAGE_NAME/\_/s\/}
                TO_PUSH="${TO_PUSH} { \\\"path\\\": \\\"${IMAGE_PATH}\\\", \\\"sha\\\": \\\"${SHA}\\\", \\\"image\\\": \\\"${image}\\\" },"
              else
                echo "${image} is already in the registry"
              fi
        
            else
              echo "This is not a app image. Ignore the image"
            fi

          done <<< "${IMAGES}"
        fi
        TO_PUSH="${TO_PUSH:0:-1} ]"
        echo "::set-output name=value::${TO_PUSH}"
      shell: bash
    - name: Authenticate to Maven Artifact Registry
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: ${{ inputs.maven-workload-identity-provider }}
        service_account: ${{ inputs.maven-workload-identity-service-account }}
        export_environment_variables: true
        create_credentials_file: true
    - name: Build Images
      run: |
        echo "${{ steps.images.outputs.value }}" | jq -c '.[]' | while read img; do
          
          IMAGE_PATH=$(echo "$img" | jq -r '.path')
          IMAGE=$(echo "$img" | jq -r '.image')
          SHA=$(echo "$img" | jq -r '.sha')
          
          git checkout "${SHA}"
          cp "${GOOGLE_APPLICATION_CREDENTIALS}" "${IMAGE_PATH}/.credentials.json"
          
          docker build \
            -t "${IMAGE}" \
            "${IMAGE_PATH}"
          
          rm "${IMAGE_PATH}/.credentials.json"
        done
      shell: bash
    - name: Authenticate to Docker Registry
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: ${{ inputs.docker-workload-identity-provider }}
        service_account: ${{ inputs.docker-workload-identity-service-account }}
    - name: Push Images
      run: |
        echo "${{ steps.images.outputs.value }}" | jq -c '.[]' | while read img; do
          IMAGE=$(echo "$img" | jq -r '.image')
          docker push "${IMAGE}"
        done
      shell: bash
