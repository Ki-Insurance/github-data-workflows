  name: Scan container
  description: Using gcloud, scans containers for any CVEs (cybervulnerabilities)

  on:
    workflow_call:
      inputs:
        container_name:
          default: 'default-container-name'
          required: true
          type: string

        dockerfile_path:
          default: './Dockerfile'
          required: true
          type: string

        poetry_google_username:
          default: 'None'
          reqiured: true
          type: string  

        artifact_registries:
          default: 'None'
          required: true
          type: string

        workload_identity_provider:
          default: 'None'
          required: true
          type: string

        service_account_ki_pypi:
          default: 'None'
          required: true
          type: string

        service_account_ki_registries:
          default: 'None'
          required: true
          type: string
  
  container-scans:
    name: Container Scans
    runs-on: ubuntu-latest
    permissions:
      id-token: "write"
      contents: "read"
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      - id: auth
        name: Authenticate with ki-pypi 
        uses: google-github-actions/auth@v0.4.1
        with:
          workload_identity_provider: "projects/137670451433/locations/global/workloadIdentityPools/python-ar-pool-1hyp/providers/python-gh-provider"
          service_account: ${{ inputs.service_account_ki_pypi }}
          token_format: "access_token"

      - name: Install Ki's container-scan library
        run: |
          pip install keyrings.google-artifactregistry-auth
          pip install --extra-index-url https://europe-python.pkg.dev/ki-artifact-registries-cf08/ki-pypi/simple/ container-scan==2.1.0
      - name: Install the gcloud tools for extracting scannable data from a local docker image
        uses: "google-github-actions/setup-gcloud@v0"
        with:
          install_components: "local-extract"

      - name: Build ${{ inputs.container_name }} image
        env:
          POETRY_HTTP_BASIC_GOOGLE_USERNAME: ${{ inputs.poetry_google_username }}
          POETRY_HTTP_BASIC_GOOGLE_PASSWORD: ${{ steps.auth.outputs.access_token }}
          DOCKER_BUILDKIT: 1
        run: |
          docker build --secret=id=POETRY_HTTP_BASIC_GOOGLE_PASSWORD -f ${{ inputs.dockerfile_path }} . -t ${{ inputs.container_name }}
          docker tag ${{ inputs.container_name }} ${{ inputs.container_name }}:${{ github.run_number }}
      - name: Authenticate to registries project
        uses: google-github-actions/auth@v0
        id: auth-docker
        with:
          workload_identity_provider: projects/137670451433/locations/global/workloadIdentityPools/docker-ar-pool-br2f/providers/docker-gh-provider
          service_account: ${{ inputs.service_account_ki_registries }}
          token_format: 'access_token'

      - name: Scan ${{ inputs.container_name }} image
        id: run-container-scan
        run: |
          container-scan ${{ inputs.artifact_registries }} ${{ inputs.container_name}}:${{ github.run_number }}