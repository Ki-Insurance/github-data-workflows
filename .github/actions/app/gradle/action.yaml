name: Validate Graddle Application
description: Run Application Tests and Linter
inputs:
  gcp-service-account-key:
    description: GCP Service Account Key (JSON format)
    required: true
  workload-identity-provider:
    description: Identity provider for maven artifact registry
    required: true
  workload-identity-service-account:
    description: Service Account to access maven artifact registry
    required: true
  java-version:
    description: java version
    required: true
  working-directory:
    description: Path of the folder containing the Dockerfile
    required: true
    default: app
  integration:
    description: do you want to run integration tests?
    required: true
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
    - name: Authenticate to Artifact Registry
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: ${{ inputs.workload-identity-provider }}
        service_account: ${{ inputs.workload-identity-service-account }}
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ inputs.java-version }}
    - name: Compile
      working-directory: ${{ inputs.working-directory }}
      run: ./gradlew build -x test -x integration -x spotlessCheck
      shell: bash
    - name: Run Linter
      working-directory: ${{ inputs.working-directory }}
      run: ./gradlew spotlessCheck
      shell: bash
    - name: Run Test with Coverage
      working-directory: ${{ inputs.working-directory }}
      run: ./gradlew jacocoTestVerification
      shell: bash
    - name: Authenticate to Artifact Registry
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: ${{ inputs.workload-identity-provider }}
        service_account: ${{ inputs.workload-identity-service-account }}
        export_environment_variables: true
        create_credentials_file: true
        cleanup_credentials: true
    - name: Docker Build test
      working-directory: ${{ inputs.working-directory }}
      run: |
        cp ${GOOGLE_APPLICATION_CREDENTIALS} /tmp/.credentials.json
        docker build .
        rm /tmp/.credentials.json
      shell: bash
    - name: Authenticate to Google Cloud
      if: inputs.integration == 'true'
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.gcp-service-account-key }}
    - name: Run Integration Tests
      if: inputs.integration == 'true'
      working-directory: ${{ inputs.working-directory }}
      run: ./gradlew integration
      shell: bash
